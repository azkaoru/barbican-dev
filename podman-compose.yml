version: '3.8'

services:
  # Rename postgres to db to match the sample configuration
  db:
    image: registry.redhat.io/rhel9/postgresql-15:latest
    container_name: barbican_postgres
    #network_mode: host
    environment:
      POSTGRESQL_USER: barbican
      POSTGRESQL_PASSWORD: barbican
      POSTGRESQL_DATABASE: barbican
      POSTGRESQL_ADMIN_PASSWORD: admin123
    volumes:
      - postgres_data:/var/lib/pgsql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U barbican -d barbican"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-init:
    image: registry.redhat.io/rhel9/postgresql-15:latest
    container_name: barbican_postgres_init
    #network_mode: host
    depends_on:
      db:
        condition: service_healthy
    environment:
      POSTGRESQL_USER: barbican
      POSTGRESQL_PASSWORD: barbican
      POSTGRESQL_DATABASE: barbican
      POSTGRESQL_ADMIN_PASSWORD: admin123
      PGPASSWORD: admin123
    volumes:
      - ./init-db:/scripts
    command:
      - /bin/bash
      - -c
      - |
        echo "Starting database initialization..."
        echo "PostgreSQL is ready, running initialization scripts..."
        psql -h barbican_postgres -U postgres  postgres -f /scripts/init.sql      
        # Run all scripts i the scripts directory
        #for script in /scripts/*.sh; do
        #  if [ -f "$script" ]; then
        #    echo "Executing: $script"
        #    bash "$script"
        #  fi
        #done
        #sleep 300 
        echo "Database initialization completed"
    restart: "no"
    ports:
      - "5432:5432"

  memcached:
    image: registry.redhat.io/ubi9/ubi:latest
    container_name: barbican_memcached
    command:
      - /bin/bash
      - -c
      - |
        dnf install -y memcached
        memcached -u memcached -p 11211 -m 64 -c 1024 -v
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo stats | nc barbican_memcached 11211"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "11211:11211"

  keystone:
    #image: registry.redhat.io/ubi9/ubi:latest
    image: docker.io/rockylinux/rockylinux:9.6-ubi
    container_name: barbican_keystone
    command:
      - /bin/bash
      - -c
      - |
        # Install EPEL repository first
        dnf install -y epel-release
        # Install OpenStack repository
        dnf install -y centos-release-openstack-epoxy
        # Install keystone packages
        dnf install -y openstack-keystone python3-keystonemiddleware python3-mod_wsgi python3-openstackclient python3-psycopg2

        useradd -r -s /bin/false keystone || true
        mkdir -p /etc/keystone /var/log/keystone /var/lib/keystone
        chown -R keystone:keystone /etc/keystone /var/log/keystone /var/lib/keystone
        
        # Generate Fernet keys
        keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
        keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
        
        # Configure Apache for Keystone
        cat > /etc/httpd/conf.d/wsgi-keystone.conf << 'EOF'
        Listen 5000
        Listen 35357

        <VirtualHost *:5000>
            WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
            WSGIProcessGroup keystone-public
            WSGIScriptAlias / /usr/bin/keystone-wsgi-public
            WSGIApplicationGroup %{GLOBAL}
            WSGIPassAuthorization On
            ErrorLogFormat "%{cu}t %M"
            ErrorLog /var/log/keystone/keystone.log
            CustomLog /var/log/keystone/keystone_access.log combined

            <Directory /usr/bin>
                WSGIProcessGroup keystone-public
                WSGIApplicationGroup %{GLOBAL}
                Require all granted
            </Directory>
        </VirtualHost>

        <VirtualHost *:35357>
            WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
            WSGIProcessGroup keystone-admin
            WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
            WSGIApplicationGroup %{GLOBAL}
            WSGIPassAuthorization On
            ErrorLogFormat "%{cu}t %M"
            ErrorLog /var/log/keystone/keystone.log
            CustomLog /var/log/keystone/keystone_access.log combined

            <Directory /usr/bin>
                WSGIProcessGroup keystone-admin
                WSGIApplicationGroup %{GLOBAL}
                Require all granted
            </Directory>
        </VirtualHost>
        EOF
        
        # Wait for database to be ready
        
        # Initialize Keystone database
        keystone-manage db_sync
        
        # Bootstrap Keystone
        keystone-manage bootstrap --bootstrap-password admin123 \
          --bootstrap-admin-url http://barbican_keystone:35357/v3/ \
          --bootstrap-internal-url http://barbican_keystone:5000/v3/ \
          --bootstrap-public-url http://barbican_keystone:5000/v3/ \
          --bootstrap-region-id RegionOne
        
        # Start Apache
        /usr/sbin/httpd -D FOREGROUND
    volumes:
      - ./config/keystone.conf:/etc/keystone/keystone.conf:ro
    environment:
      - OS_DB_CONNECTION=postgresql+psycopg2://keystone:keystone@barbican_postgres/keystone
    depends_on:
      db:
        condition: service_healthy
      postgres-init:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://barbican_keystone:5000/v3 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5 
    ports:
      - "35357:35357"
      - "5000:5000"
    
  # Keystone API hosted by Apache service
  # keystone_apache:
  #   image: httpd:2.4-alpine
  #   container_name: openstack_keystone_api
  #   ports:
  #     - "5000:5000"
  #     - "35357:35357"
  #   volumes:
  #     # Keystone WSGI configuration for Apache
  #     - ./config/wsgi-keystone.conf:/usr/local/apache2/conf/extra/wsgi-keystone.conf:ro
  #     # Keystone configuration file
  #     - ./config/keystone.conf:/etc/keystone/keystone.conf:ro
  #   command:
  #     - /bin/sh
  #     - -c
  #     - |
  #       # Include the Keystone WSGI configuration
  #       echo "Include conf/extra/wsgi-keystone.conf" >> /usr/local/apache2/conf/httpd.conf
  #       # Start Apache
  #       httpd-foreground
  #   depends_on:
  #     keystone-db-sync:
  #       condition: service_completed_successfully
  #     db:
  #       condition: service_healthy
  #     memcached:
  #       condition: service_started
  #   restart: unless-stopped

volumes:
  postgres_data:
  #keystone_fernet:
